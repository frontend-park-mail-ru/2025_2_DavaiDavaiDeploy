name: Linter

on:
  push:
  pull_request:
    types: [opened]

permissions:
  checks: write
  contents: write

jobs:
  install-cache:
    name: Install cache
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.set-cache-key.outputs.cache-key }}
    steps:
      - name: Get the repository code
        uses: actions/checkout@v5

      - name: Set cache key
        id: set-cache-key
        run: echo "cache-key=${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}" >> $GITHUB_OUTPUT
      - name: Cache npm dependencies
        id: cache-ci
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.npm
          key: ${{ steps.set-cache-key.outputs.cache-key }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install dependencies
        if: steps.cache-ci.outputs.cache-hit != 'true'
        run: npm ci

  eslint-check:
    name: Eslint check
    runs-on: ubuntu-latest
    needs: install-cache
    steps:
      - uses: actions/checkout@v5
      - name: Restore npm cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.npm
          key: ${{ needs.install-cache.outputs.cache-key }}
      - name: Run ESLint
        uses: wearerequired/lint-action@v2
        with:
          eslint: true
          prettier: false
          stylelint: false
          auto_fix: true

  prettier-check:
    name: Prettier check
    runs-on: ubuntu-latest
    needs: install-cache
    steps:
      - uses: actions/checkout@v5
      - name: Restore npm cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.npm
          key: ${{ needs.install-cache.outputs.cache-key }}
      - name: Run Prettier
        uses: wearerequired/lint-action@v2
        with:
          eslint: false
          prettier: true
          stylelint: false
          auto_fix: true

  stylelint-check:
    name: Stylelint check
    runs-on: ubuntu-latest
    needs: install-cache
    steps:
      - uses: actions/checkout@v5
      - name: Restore npm cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.npm
          key: ${{ needs.install-cache.outputs.cache-key }}
      - name: Run Stylelint
        run: npm run lint:stylelint

  build:
    name: Build
    runs-on: ubuntu-latest
    needs:
      ['install-cache', 'eslint-check', 'prettier-check', 'stylelint-check']
    steps:
      - name: Get the repository code
        uses: actions/checkout@v5
      - name: Restore npm cache
        uses: actions/cache@v4
        with:
          path: ~/.node_modules
          key: ${{ needs.install-cache.outputs.cache-key }}
      - name: Run build
        run: npm run build
